const createKeccakHash = require("keccak")
var hash = require('hash.js')
const crypto = require('crypto')

function keccak256(...data) {
    const h = keccak('keccak256');
    data.forEach(d => {
        if (Buffer.isBuffer(d)) {
            h.update(d);
        }
        else {
            h.update(Buffer.from(d, 'utf8'));
        }
    });
    return h.digest();
}

// eth hash(transaction hash)
console.log('eth: ', createKeccakHash('keccak256').update(new Buffer('f865098609184e72a00082520894d3ae78222beadb038203be21ed5ce7c9b1bff602108029a0798b4e082f76675469ec016a577c870af5c3c083b0df81efb887337eae47694ba037d6589a0369660510d8c54765e0e9ddece71f5f4f5c81b94f7ab54e3b7ace97', 'hex')).digest('hex'))

function sha256(rawdata) {
    return crypto.createHash('sha256').update(rawdata).digest()
}

const hashF = sha256(new Buffer('64653031663036323564656530613534326132633837666130613236306131343163653931646131636564396134386665316661313961383432333736643737326638356136633131323065306130373431346534653264333433353337313061386264663130353132323630613134613631633661646165373036313033376633396264643665393533666235666331626531346332643132306530613037343134653465326433343335333731306138626466313035313237303061323665623561653938373231303234363666616632323364663031666530356533633662373830306234373061623337653465333531656533373630656439653035346432333637396664626166313234303937623339373163633533366161653264306331396566333037303838623265313637303232323036313763386433666337393533373637373837303663313333666366353865613437613632633335636366653838373730653832656461343238323665303633613839393166363166373832303163373064363632383565313862623866326132303036316131303534373236313665373336363635373232303666366536353230343234653432', 'hex'))
console.log('hashF: ', hashF)
const hashS = sha256(hashF)
console.log('btc: ', hashS.toString('hex'))